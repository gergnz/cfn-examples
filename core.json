{"AWSTemplateFormatVersion":"2010-09-09","Description":"A stack for deploying the core infra required for containerized applications in AWS Fargate.","Parameters":{"NetworkStackName":{"Type":"String","Description":"The name of the parent fargate networking stack that you created. Necessary to locate and reference resources created by that stack.","Default":"fargatenetwork"},"domainName":{"Type":"String","Description":"The name of the parent domain"},"appRepoName":{"Type":"String","Description":"The name of the ECR repository that hosts the application image","Default":"snappassapplication"},"databaseRepoName":{"Type":"String","Description":"The name of the ECR repository that hosts the database image","Default":"redisdatabase"},"redirectRepoName":{"Type":"String","Description":"The name of the ECR repository that hosts the redirect image","Default":"redirectimage"},"hostedZoneId":{"Type":"String","Description":"The hosted zone id"},"certificateArn":{"Type":"String","Description":"ARN of the certificate"}},"Resources":{"subHostedZone":{"Properties":{"Name":{"Ref":"domainName"}},"Type":"AWS::Route53::HostedZone"},"Route53RecordSet":{"Properties":{"HostedZoneId":{"Ref":"subHostedZone"},"Type":"A","Name":{"Ref":"domainName"},"AliasTarget":{"HostedZoneId":{"Fn::GetAtt":["PublicLoadBalancer","CanonicalHostedZoneID"]},"DNSName":{"Fn::GetAtt":["PublicLoadBalancer","DNSName"]}}},"Type":"AWS::Route53::RecordSet"},"apexRecordSet":{"Properties":{"HostedZoneId":{"Ref":"hostedZoneId"},"Type":"NS","Name":{"Ref":"domainName"},"TTL":100,"ResourceRecords":{"Fn::GetAtt":["subHostedZone","NameServers"]}},"Type":"AWS::Route53::RecordSet"},"applicationRepo":{"Properties":{"RepositoryName":{"Ref":"appRepoName"}},"Type":"AWS::ECR::Repository"},"databaseRepo":{"Properties":{"RepositoryName":{"Ref":"databaseRepoName"}},"Type":"AWS::ECR::Repository"},"redirectRepo":{"Properties":{"RepositoryName":{"Ref":"redirectRepoName"}},"Type":"AWS::ECR::Repository"},"ECSCluster":{"Type":"AWS::ECS::Cluster"},"FargateContainerSecurityGroup":{"Properties":{"GroupDescription":"Access to the Fargate containers","VpcId":{"Fn::ImportValue":{"Fn::Join":["-",[{"Ref":"NetworkStackName"},"VPCId"]]}}},"Type":"AWS::EC2::SecurityGroup"},"EcsSecurityGroupIngressFromPublicALB":{"Properties":{"Description":"Ingress from the public ALB","GroupId":{"Ref":"FargateContainerSecurityGroup"},"IpProtocol":"tcp","FromPort":"0","ToPort":"5000","SourceSecurityGroupId":{"Fn::ImportValue":{"Fn::Join":["-",[{"Ref":"NetworkStackName"},"LoadBalancerSG"]]}}},"Type":"AWS::EC2::SecurityGroupIngress"},"EcsSecurityGroupIngressFromSelf":{"Properties":{"Description":"Ingress from other containers in the same security group","GroupId":{"Ref":"FargateContainerSecurityGroup"},"IpProtocol":"tcp","FromPort":"0","ToPort":"5000","SourceSecurityGroupId":{"Ref":"FargateContainerSecurityGroup"}},"Type":"AWS::EC2::SecurityGroupIngress"},"PublicLoadBalancer":{"Properties":{"Scheme":"internet-facing","LoadBalancerAttributes":[{"Key":"idle_timeout.timeout_seconds","Value":"30"}],"Subnets":[{"Fn::ImportValue":{"Fn::Join":["",[{"Ref":"NetworkStackName"},"subneta"]]}},{"Fn::ImportValue":{"Fn::Join":["",[{"Ref":"NetworkStackName"},"subnetc"]]}}],"SecurityGroups":[{"Fn::ImportValue":{"Fn::Join":["-",[{"Ref":"NetworkStackName"},"LoadBalancerSG"]]}}]},"Type":"AWS::ElasticLoadBalancingV2::LoadBalancer"},"TargetGroupPublic":{"Properties":{"HealthCheckIntervalSeconds":6,"HealthCheckPath":"/","HealthCheckProtocol":"HTTP","HealthCheckTimeoutSeconds":5,"HealthCheckPort":"5000","HealthyThresholdCount":2,"Name":{"Ref":"AWS::StackName"},"Port":80,"Protocol":"HTTP","UnhealthyThresholdCount":2,"VpcId":{"Fn::ImportValue":{"Fn::Join":["-",[{"Ref":"NetworkStackName"},"VPCId"]]}},"TargetType":"ip"},"Type":"AWS::ElasticLoadBalancingV2::TargetGroup"},"TargetGroupPublic2":{"Properties":{"HealthCheckIntervalSeconds":6,"HealthCheckPath":"/","HealthCheckProtocol":"HTTP","HealthCheckTimeoutSeconds":5,"HealthCheckPort":"80","HealthyThresholdCount":2,"Matcher":{"HttpCode":"301"},"Name":"RedirectTargetGroup","Port":80,"Protocol":"HTTP","UnhealthyThresholdCount":2,"VpcId":{"Fn::ImportValue":{"Fn::Join":["-",[{"Ref":"NetworkStackName"},"VPCId"]]}},"TargetType":"ip"},"Type":"AWS::ElasticLoadBalancingV2::TargetGroup"},"PublicLoadBalancerHTTPSListener":{"Properties":{"DefaultActions":[{"TargetGroupArn":{"Ref":"TargetGroupPublic"},"Type":"forward"}],"LoadBalancerArn":{"Ref":"PublicLoadBalancer"},"Port":443,"Protocol":"HTTPS","Certificates":[{"CertificateArn":{"Ref":"certificateArn"}}]},"Type":"AWS::ElasticLoadBalancingV2::Listener"},"PublicLoadBalancerHTTPListener":{"Properties":{"DefaultActions":[{"TargetGroupArn":{"Ref":"TargetGroupPublic"},"Type":"forward"}],"LoadBalancerArn":{"Ref":"PublicLoadBalancer"},"Port":5000,"Protocol":"HTTP"},"Type":"AWS::ElasticLoadBalancingV2::Listener"},"PublicLoadBalancerHTTPListener2":{"Properties":{"DefaultActions":[{"TargetGroupArn":{"Ref":"TargetGroupPublic2"},"Type":"forward"}],"LoadBalancerArn":{"Ref":"PublicLoadBalancer"},"Port":80,"Protocol":"HTTP"},"Type":"AWS::ElasticLoadBalancingV2::Listener"},"ECSRole":{"Properties":{"AssumeRolePolicyDocument":{"Statement":[{"Action":["sts:AssumeRole"],"Effect":"Allow","Principal":{"Service":["ecs.amazonaws.com"]}}]},"Path":"/","Policies":[{"PolicyDocument":{"Statement":[{"Action":["ec2:AttachNetworkInterface","ec2:CreateNetworkInterface","ec2:CreateNetworkInterfacePermission","ec2:DeleteNetworkInterface","ec2:DeleteNetworkInterfacePermission","ec2:Describe*","ec2:DetachNetworkInterface","elasticloadbalancing:DeregisterInstancesFromLoadBalancer","elasticloadbalancing:DeregisterTargets","elasticloadbalancing:Describe*","elasticloadbalancing:RegisterInstancesWithLoadBalancer","elasticloadbalancing:RegisterTargets"],"Effect":"Allow","Resource":"*"}]},"PolicyName":"ecs-service"}]},"Type":"AWS::IAM::Role"},"ECSTaskExecutionRole":{"Properties":{"AssumeRolePolicyDocument":{"Statement":[{"Action":["sts:AssumeRole"],"Effect":"Allow","Principal":{"Service":["ecs-tasks.amazonaws.com"]}}]},"Path":"/","Policies":[{"PolicyDocument":{"Statement":[{"Action":["ecr:GetAuthorizationToken","ecr:BatchCheckLayerAvailability","ecr:GetDownloadUrlForLayer","ecr:BatchGetImage","logs:CreateLogStream","logs:PutLogEvents"],"Effect":"Allow","Resource":"*"}]},"PolicyName":"AmazonECSTaskExecutionRolePolicy"}]},"Type":"AWS::IAM::Role"}},"Outputs":{"ClusterName":{"Description":"The name of the ECS cluster","Value":{"Ref":"ECSCluster"},"Export":{"Name":{"Fn::Join":["-",[{"Ref":"AWS::StackName"},"ECSClusterName"]]}}},"appRepoName":{"Description":"The name of the application repository","Value":{"Ref":"appRepoName"},"Export":{"Name":{"Fn::Join":["-",[{"Ref":"AWS::StackName"},"appRepoName"]]}}},"databaseRepoName":{"Description":"The name of the database repository","Value":{"Ref":"databaseRepoName"},"Export":{"Name":{"Fn::Join":["-",[{"Ref":"AWS::StackName"},"databaseRepoName"]]}}},"redirectRepoName":{"Description":"The name of the http redirect repository","Value":{"Ref":"redirectRepoName"},"Export":{"Name":{"Fn::Join":["-",[{"Ref":"AWS::StackName"},"redirectRepoName"]]}}},"ECSRole":{"Description":"The ARN of the ECS role","Value":{"Fn::GetAtt":["ECSRole","Arn"]},"Export":{"Name":{"Fn::Join":["-",[{"Ref":"AWS::StackName"},"ECSRole"]]}}},"ECSTaskExecutionRole":{"Description":"The ARN of the ECS role","Value":{"Fn::GetAtt":["ECSTaskExecutionRole","Arn"]},"Export":{"Name":{"Fn::Join":["-",[{"Ref":"AWS::StackName"},"ECSTaskExecutionRole"]]}}},"PublicLoadbalancer":{"Description":"The ARN of the public load balancer","Value":{"Ref":"PublicLoadBalancer"},"Export":{"Name":{"Fn::Join":["-",[{"Ref":"AWS::StackName"},"PublicLoadBalancer"]]}}},"TargetGroup":{"Description":"The ARN of the Target Group","Value":{"Ref":"TargetGroupPublic"},"Export":{"Name":{"Fn::Join":["-",[{"Ref":"AWS::StackName"},"TargetGroup"]]}}},"RedirectTargetGroup":{"Description":"The ARN of the Target Group","Value":{"Ref":"TargetGroupPublic2"},"Export":{"Name":{"Fn::Join":["-",[{"Ref":"AWS::StackName"},"RedirectTargetGroup"]]}}},"PublicListener":{"Description":"The ARN of the public load balancer's HTTP Listener","Value":{"Ref":"PublicLoadBalancerHTTPListener"},"Export":{"Name":{"Fn::Join":["-",[{"Ref":"AWS::StackName"},"PublicLoadBalancerHTTPListener"]]}}},"FargateContainerSecurityGroup":{"Description":"A security group used to allow Fargate containers to receive traffic","Value":{"Ref":"FargateContainerSecurityGroup"},"Export":{"Name":{"Fn::Join":["-",[{"Ref":"AWS::StackName"},"FargateContainerSecurityGroup"]]}}}}}
